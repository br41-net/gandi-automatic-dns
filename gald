#!/bin/sh

# Gandi Automatic Live DNS 0.1

usage() {
  printf "\nUsage: $0 -a APIKEY -d EXAMPLE.COM -r \"RECORD-NAMES\""
  exit 1
}

while [ $# -gt 0 ]; do
  case "$1" in
    -a) apikey="$2"; shift;;
    -d) domain="$2"; shift;;
    -r) records="$2"; shift;;
  esac
  shift
done
if [ -z "$apikey" -o -z "$domain" -o -z "$records" ]; then
  usage
fi

gandi="dns.api.gandi.net:443"

live() {
  tmp_json=""
  tmp_post="${1} /api/v5/${2} HTTP/1.1
User-Agent: Gandi Automatic Live DNS shell script/0.1
Host: ${gandi}
Content-Type: application/json
Content-Length: `printf "%s" "$tmp_json" | wc -c | tr -d "[:space:]"`
X-Api-Key: ${apikey}

"
  tmp_message="$tmp_post$tmp_json"
  printf "%s" "$tmp_message" | openssl s_client -quiet -connect "${gandi}" 2> /dev/null | tail -1
  unset tmp_json
  unset tmp_post
  unset tmp_message
}

get_json() {
  IFS=$'\n'
  for i in `printf "$2" | tr -d '{}\t\n\r\f' | awk 'BEGIN{RS=", "}{print $0}' | sed 's/^ //'`; do
    field_name=`printf "$i" | awk -F ': ' '{print $1}' | tr -d '"'`
    field_value=`printf "$i" | awk -F ': ' '{print $2}' | tr -d '"'`
    if [ "$field_name" = "$1" ]; then
      printf "$field_value"
      break
    fi
  done
  unset IFS
}

# Get correct IP address
#
# COPY FROM GAD
#

# Get active zonefile

domain_json=`live "GET" "domains/${domain}"`
zone_uuid=`get_json "zone_uuid" "$domain_json"`
echo "Zone UUID is ${zone_uuid}"
exit

# Check values of records in the active version of the zonefile

check $records
